/*
 *  DO NOT EDIT
 * 
 *  The contents of this file are subject to the terms
 *  of the GNU General Public License v3
 *  You may not use this file except
 *  in compliance with the License.
 * 
 *  You can obtain a copy of the license at
 *  http://www.gnu.org/licenses/gpl.html
 *  See the License for the specific language governing
 *  permissions and limitations under the License.
 * 
 */


/*
 * JTree grammar file for the Blite Language.
 */

options {
   MULTI=true;
   NODE_EXTENDS="BliteDefNode";
}


PARSER_BEGIN(BliteParser)

package it.unifi.dsi.blitese.parser; // Target package of the generated classes:

public class BliteParser extends AbstractBliteParser {

    public void parse() throws ParseException {
        DefinitionUnit();
    }

}

PARSER_END(BliteParser)

/* 
 * The token definitions of the lexer for Blite language folow.
 */

/* WHITE SPACE */

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| "\f"
}

/* RESERVED WORDS AND LITERALS */

TOKEN :
{
  < INVOKE: "inv" >
| < RECEIVE: "rcv" >
| < EMPTY: "empty" >
| < THORW: "throw" >
| < EXIT: "exit" >
}

/*****************************************
 * THE BLITE LANGUAGE GRAMMAR STARTS HERE *
 *****************************************/


void DefinitionUnit() :
{}
{
    Deployments()
    <EOF>
}

void Deployments() :
{}
{
    Service() ( "||" Service() )*
}

void Service() :
{}
{
    ServiceScope()
}

void ServiceScope() :
{}
{
    "[" StartActivity() "]"
}

void Scope() :
{}
{
    "[" Activity() "]"
}

void StartActivity() :
{}
{
    ReceiveActivity() 
  | StartSequenceActivity()
}

void Activity() :
{}
{
    BasicActivity() | SequenceActivity()
}

void BasicActivity() :
{}
{
    EmptyActivity()
  | ReceiveActivity()
  | InvokeActivity()
  | ExitActivity()
}

void StartSequenceActivity() :
{}
{
   "{" ReceiveActivity() ( ";" Activity() )* "}"
}

void SequenceActivity() :
{}
{
   "{" Activity() ( ";" Activity() )* "}"
}

void EmptyActivity() :
{}
{
    <EMPTY>
}

void ReceiveActivity() :
{}
{
    <RECEIVE>
}

void InvokeActivity() :
{}
{
    <INVOKE>
}

void ExitActivity() :
{}
{
    <EXIT>
}

