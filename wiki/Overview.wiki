#summary Introduzione e Premesse a Blite SE

= Introduzione =

*B*_lite_ *SE* e' un progetto finalizzato all'implementazione del linguaggio [http://rap.dsi.unifi.it/cows/papers/blite.pdf Blite] all'interno di [https://fuji.dev.java.net/ Fuji] come JBI service engine.

*B*_lite_ e' un linguaggio ideato e formalizzato presso il Dipartimento di Sistemi Informatici ([http://www.dsi.unifi.it Dsi]) dell'Università degli Studi di Firenze ([http://www.unifi.it Unifi]) con l'intento di fornire un semantica formale a WS-BPEL e un strumento di supporto per l'analisi formale (validazione e verifica) delle applicazioni service based. Una presentazione dettagliata del linguaggio e' fornita dall'articolo [http://rap.dsi.unifi.it/cows/papers/blite.pdf "A formal account of WS-BPEL"].

= Dettagli =

L'obiettivo di questo progetto e' quello di realizzare un'implementazione di *B*_lite_ tramite un componente JBI e quindi fornirne un'implementazione usufruibile su ogni piattaforma JBI compatibile ([https://open-esb.dev.java.net/ OpenESB], [http://servicemix.apache.org/home.html Apache ServiceMix] ...)

JBI infatti e' una specifica JCP ([http://jcp.org/aboutJava/communityprocess/final/jsr208/index.html JSR-208]) il cui acronimo sta per Java Business Integration, e definisce un'architettura standard capace d'integrare componenti eterogenei secondo il modello SOA e SOC.

Le specifiche JBI pur limitandosi alla tecnologia Java si basano sui principali standard open patrocinati da [W3C] e [Oasis].
JBI specifica lo sviluppo di container di servizi secondo un modello a plugin. L'architettura e' costituita da un contenitore/framework (l'environment JBI) in grado di ospitare sottocontainer di servizi (i Componets), si parla anche di "container of containers". I Componets verso l'eviroments e i Servizi (in JBI idetificati con il termine Service Units SU) verso i Componets sono specificati tramite il Web Services Description Language 2.0 ([WSDL2.0]) che definisce le interfacce e i tipi di dati scambiati. All'interno del fremowork possono essere resi disponibili due categorie di Componets, i Binding Components (BC) e i Service Engine (SE). I BC sono componenti che realizzano un particolare binding su una reale tecnologia/protocollo di interazione permettendo la comunicazione del sistema JBI di comunicare con l'esterno e rendendo disponibili le reali implementazioni dei servizi che posso basarsi quindi su le piu' svariate tecnologie e risiedere su le piu' eterogenie piattaforme. 


L'idea di base è di potere definire dei contenitori di servizi che consentano la System Integration e permettere quindi anche a sistemi inizialmente non progettati per lavorare insieme di cooperare tra loro come se fossero un'unica applicazione (Composite Application).

In questo modo lo sviluppatore sarà in grado di sviluppare un'applicazione "assemblando" le funzionalità necessarie utilizzando gli opportuni Componenti plugin JBI. Ad esempio una soluzione d'integrazione potrebbe essere un'applicazione composta da un engine BPEL che interopera con un EJB Continer e un data trasformation all'interno di un JBI environment.